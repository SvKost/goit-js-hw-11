{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst API_KEY = '41875605-6b47be3c8e074a549a6d5f149';\nconst BASE_URL = 'https://pixabay.com/api';\n\nconst searchForm = document.querySelector('form');\nconst imagesContainer = document.querySelector('.images-container');\n\nsearchForm.addEventListener('submit', handleSearch);\n\nfunction handleSearch(event) {\n  event.preventDefault();\n\n  const form = event.currentTarget;\n  const query = form.querySelector('input').value.trim();\n\n  if (query) {\n    fetchImages(query)\n      .then(showImagesGallery)\n      .catch(onFetchError)\n      .finally(() => form.reset());\n  } else {\n    iziToast.show({\n      message:\n        'Sorry, there are no images matching your search query. Please try again!',\n    });\n  }\n}\n\nfunction fetchImages(query) {\n  const searchParams = new URLSearchParams({\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  return fetch(`${BASE_URL}/?${searchParams}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json().then(data => {\n      if (data.hits.length === 0) {\n        iziToast.show({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n      }\n      return data.hits;\n    });\n  });\n}\n\nfunction showImagesGallery(images) {\n  imagesContainer.innerHTML = '';\n\n  const createQueryImagesMarkup = ({\n    webformatURL,\n    largeImageURL,\n    tags,\n    likes,\n    views,\n    comments,\n    downloads,\n  }) => `\n  <ul class=\"images-list\">\n    <li class=\"image-item\">\n      <a class=\"large-image-link\" href=\"${largeImageURL}\">\n        <img class=\"image-preview\" src=\"${webformatURL}\" alt=\"${tags}\">\n      </a>\n      <p class=\"image-item-description\">Likes ${likes}</p>\n      <p class=\"image-item-description\">Views ${views}</p>\n      <p class=\"image-item-description\">Comments ${comments}</p>\n      <p class=\"image-item-description\">Downloads ${downloads}</p>\n    </li>\n  </ul>\n  `;\n\n  const galleryMarkup = images.map(createQueryImagesMarkup).join('');\n\n  imagesContainer.innerHTML = galleryMarkup;\n}\n\nfunction onFetchError() {\n  iziToast.show({\n    message:\n      'Sorry, there are no images matching your search query. Please try again!',\n  });\n}\n"],"names":["API_KEY","BASE_URL","searchForm","imagesContainer","handleSearch","event","form","query","fetchImages","showImagesGallery","onFetchError","iziToast","searchParams","response","data","images","createQueryImagesMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","galleryMarkup"],"mappings":"svBAGA,MAAMA,EAAU,qCACVC,EAAW,0BAEXC,EAAa,SAAS,cAAc,MAAM,EAC1CC,EAAkB,SAAS,cAAc,mBAAmB,EAElED,EAAW,iBAAiB,SAAUE,CAAY,EAElD,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAMC,EAAOD,EAAM,cACbE,EAAQD,EAAK,cAAc,OAAO,EAAE,MAAM,OAE5CC,EACFC,EAAYD,CAAK,EACd,KAAKE,CAAiB,EACtB,MAAMC,CAAY,EAClB,QAAQ,IAAMJ,EAAK,MAAK,CAAE,EAE7BK,EAAS,KAAK,CACZ,QACE,0EACR,CAAK,CAEL,CAEA,SAASH,EAAYD,EAAO,CAC1B,MAAMK,EAAe,IAAI,gBAAgB,CACvC,IAAKZ,EACL,EAAGO,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAED,OAAO,MAAM,GAAGN,MAAaW,GAAc,EAAE,KAAKC,GAAY,CAC5D,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,UAAU,EAErC,OAAOA,EAAS,OAAO,KAAKC,IACtBA,EAAK,KAAK,SAAW,GACvBH,EAAS,KAAK,CACZ,QACE,0EACZ,CAAS,EAEIG,EAAK,KACb,CACL,CAAG,CACH,CAEA,SAASL,EAAkBM,EAAQ,CACjCZ,EAAgB,UAAY,GAE5B,MAAMa,EAA0B,CAAC,CAC/B,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACJ,IAAQ;AAAA;AAAA;AAAA,0CAGkCL;AAAA,0CACAD,WAAsBE;AAAA;AAAA,gDAEhBC;AAAA,gDACAC;AAAA,mDACGC;AAAA,oDACCC;AAAA;AAAA;AAAA,IAK5CC,EAAgBT,EAAO,IAAIC,CAAuB,EAAE,KAAK,EAAE,EAEjEb,EAAgB,UAAYqB,CAC9B,CAEA,SAASd,GAAe,CACtBC,EAAS,KAAK,CACZ,QACE,0EACN,CAAG,CACH"}